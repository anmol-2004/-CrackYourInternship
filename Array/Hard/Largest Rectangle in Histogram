//Leetcode 84
//https://leetcode.com/problems/largest-rectangle-in-histogram/


class Solution {
public:
    vector<int> nextSmaller(vector<int> arr, int size) {
        vector<int> res(size);
        stack<int> st;

        st.push(-1);

        for(int i = size-1;i >= 0;i--) {
            while(st.top() !=-1 && arr[i] < arr[st.top()] ) { 
                st.pop();
            }

            res[i] = st.top();
            st.push(i);
        }
        return res;
    }

    vector<int> prevSmaller(vector<int> arr, int size) {
        vector<int> res(size);
        stack<int> st;

        st.push(-1);

        for(int i = 0;i < size;i++) {
            int curr = arr[i];
            while(st.top()!=-1 && arr[st.top()] >= curr) {
                st.pop();
            }

            res[i] = st.top();
            st.push(i);
        }
        return res;
    }


    int largestRectangleArea(vector<int>& heights) {
        vector<int> next = nextSmaller(heights, heights.size());

        for(int i=0;i<next.size();i++) {
            if(next[i] == -1) {
                next[i] = heights.size();
            }
        }
        vector<int> prev = prevSmaller(heights, heights.size());

        int area = INT_MIN;

        for(int i = 0;i < next.size();i++) {
            int width = next[i] - prev[i] - 1;
            int length = heights[i];

            int currArea = width*length;
            area = max(area, currArea);
        }
        return area;
    }
};
