//Leetcode 33
//https://leetcode.com/problems/search-in-rotated-sorted-array/


class Solution {
public:
    int pivotIndex(vector<int>& arr){
        int n=arr.size();
        for(int i=0;i<n;i++){
            if(i == n-1 || arr[i] > arr[i+1]){
                return i;
            }
        }
        return -1;
    }
    int binarySearch(vector<int>& arr, int l, int u, int key){
        while(l<=u){
            int mid=l+(u-l)/2;
            if(arr[mid]>key){
                u=mid-1;
            }
            else if(arr[mid]<key){
                l=mid+1;
            }
            else{
                return mid;
            }
        }
        return -1;
    }
    int search(vector<int>& nums, int target) {
        int pi=pivotIndex(nums);
        int n=nums.size();
        int ans=-1;
        if(target>=nums[0] && target<=nums[pi]){
            ans=binarySearch(nums, 0, pi, target);
        }
        else{
            ans=binarySearch(nums, pi+1, n-1, target);
        }
        return ans;
    }
};
