//Leetcode 110
//https://leetcode.com/problems/balanced-binary-tree/


class Solution {
public:
    int height(TreeNode* root){
        if(root == NULL) {
            return 0;
        }

        int left = height(root->left);

        int right = height(root->right);

        return max(left, right) + 1;
    }
    int heightDiff(TreeNode* root) {
        if(root == NULL) {
            return 0;
        }

        int left = height(root->left);

        int right = height(root->right);

        return abs(left - right);
    }
    bool isBalanced(TreeNode* root) {
        queue<TreeNode*>q;

        q.push(root);

        while(!q.empty()){
            TreeNode* node = q.front();
            q.pop();
            int diff = heightDiff(node);
      
            if(diff > 1){
                return false;
            }
            if(node != NULL) {
                q.push(node->left);
                q.push(node->right);
            }
        }
        return true;
    }
};
